{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hossein\\\\2024\\\\Spring\\\\CS529\\\\HW01\\\\CS529_HW01\\\\src\\\\WhiteHatStats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport useSVGCanvas from './useSVGCanvas.js';\nimport * as d3 from 'd3';\n\n//change the code below to modify the bottom plot view\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WhiteHatStats(props) {\n  _s();\n  const d3Container = useRef(null);\n  const [svg, height, width, tTip] = useSVGCanvas(d3Container);\n  const margin = {\n    top: 60,\n    right: 30,\n    bottom: 60,\n    left: 60\n  };\n  useEffect(() => {\n    if (!svg || !props.data) return;\n    const data = props.data.states;\n\n    // Prepare data in suitable format for stacking\n    const plotData = data.map(state => {\n      return {\n        'name': state.state,\n        'male_count': state.male_count,\n        'female_count': state.count - state.male_count // Assuming count is total\n      };\n    });\n\n    // Define scales\n    const xScale = d3.scaleBand().domain(plotData.map(d => d.name)).range([margin.left, width - margin.right]).padding(0.1);\n    const yScale = d3.scaleLinear().domain([0, d3.max(plotData, d => d.male_count + d.female_count)]).nice().range([height - margin.bottom, margin.top]);\n    ////\n\n    ////\n\n    //  create stack bar base on two keys male and female Stack generator\n    const stack = d3.stack().keys(['male_count', 'female_count']);\n    const stackedData = stack(plotData);\n    console.log(plotData);\n    // Draw male from plotdata it is first key in console.log\n    svg.selectAll('.male-bars').remove();\n    const maleBars = svg.selectAll('.male-bars').data(stackedData[0]).enter().append('rect').attr('class', 'male-bars').attr('x', d => xScale(d.data.name)).attr('y', d => yScale(d[1])).attr('height', d => yScale(d[0]) - yScale(d[1])).attr('width', xScale.bandwidth()).attr('fill', 'steelblue').on('mouseover', (e, d) => {\n      const string = `${d.data.name}</br>Male Deaths: ${d.data.male_count}`;\n      props.ToolTip.moveTTipEvent(tTip, e);\n      tTip.html(string);\n    }).on('mousemove', e => {\n      props.ToolTip.moveTTipEvent(tTip, e);\n    }).on('mouseout', () => {\n      props.ToolTip.hideTTip(tTip);\n    });\n\n    // Draw female deaths bars on top of male deaths bars\n    svg.selectAll('.female-bars').remove();\n    const femaleBars = svg.selectAll('.female-bars').data(stackedData[1]).enter().append('rect').attr('class', 'female-bars').attr('x', d => xScale(d.data.name)).attr('y', d => yScale(d[1])).attr('height', d => yScale(d[0]) - yScale(d[1])).attr('width', xScale.bandwidth()).attr('fill', 'pink').on('mouseover', (e, d) => {\n      const string = `${d.data.name}</br>Female Deaths: ${d.data.female_count}`;\n      props.ToolTip.moveTTipEvent(tTip, e);\n      tTip.html(string);\n    }).on('mousemove', e => {\n      props.ToolTip.moveTTipEvent(tTip, e);\n    }).on('mouseout', () => {\n      props.ToolTip.hideTTip(tTip);\n    });\n\n    // Draw x-axis\n    svg.selectAll('.x-axis').remove();\n    svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(xScale)).selectAll('text').attr('dy', '1em').style('text-anchor', 'middle');\n\n    // Draw y-axis\n    svg.selectAll('.y-axis').remove();\n    svg.append('g').attr('class', 'y-axis').attr('transform', `translate(${margin.left},0)`).call(d3.axisLeft(yScale));\n\n    // Change the title\n    const labelSize = margin.top / 2;\n    svg.selectAll('text').remove();\n    svg.append('text').attr('x', width / 2).attr('y', labelSize).attr('text-anchor', 'middle').attr('font-size', labelSize).attr('font-weight', 'bold').text('Gun Deaths by State');\n    y = 1000;\n    var yAxis = d3.axisLeft(y);\n    svg.append('g').call(yAxis);\n    // add x-bar and y bar chart information\n\n    // creat a box color for barchart to show information female and male      //\n    function drawStateLegend() {\n      let bounds = svg.node().getBBox();\n      svg.append(\"rect\").attr('class', 'barChartLegendRect').attr(\"x\", bounds.x + bounds.width - 200).attr(\"y\", bounds.y).attr(\"width\", 20).attr(\"height\", 20).style(\"fill\", \"steelblue\");\n      svg.append(\"rect\").attr('class', 'barChartLegendRect').attr(\"x\", bounds.x + bounds.width - 200).attr(\"y\", bounds.y + 50).attr(\"width\", 20).attr(\"height\", 20).style(\"fill\", \"pink\");\n      svg.append(\"text\").attr('class', 'barChartLegendRectText').attr(\"x\", bounds.x + bounds.width - 160).attr(\"y\", bounds.y + 10).text(\"Male victims\").attr(\"alignment-baseline\", \"middle\");\n      svg.append(\"text\").attr('class', 'barChartLegendRectText').attr(\"x\", bounds.x + bounds.width - 160).attr(\"y\", bounds.y + 60).text(\"Female victims\").attr(\"alignment-baseline\", \"middle\");\n    }\n    drawStateLegend();\n  }, [props.data, svg]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d3-component\",\n    style: {\n      'height': '99%',\n      'width': '99%'\n    },\n    ref: d3Container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n//END of TODO #1.\n/////////////////////////////////////////////////////////////////////////\n\n//////////////////////\n_s(WhiteHatStats, \"WSxzHn2M6v/mpwTKCm+WLF/lrvI=\", false, function () {\n  return [useSVGCanvas];\n});\n_c = WhiteHatStats;\nconst drawingDifficulty = {\n  'IL': 9,\n  'AL': 2,\n  'AK': 1,\n  'AR': 3,\n  'CA': 9.51,\n  'CO': 0,\n  'DE': 3.1,\n  'DC': 1.3,\n  'FL': 8.9,\n  'GA': 3.9,\n  'HI': 4.5,\n  'ID': 4,\n  'IN': 4.3,\n  'IA': 4.1,\n  'KS': 1.6,\n  'KY': 7,\n  'LA': 6.5,\n  'MN': 2.1,\n  'MO': 5.5,\n  'ME': 7.44,\n  'MD': 10,\n  'MA': 6.8,\n  'MI': 9.7,\n  'MN': 5.1,\n  'MS': 3.8,\n  'MT': 1.4,\n  'NE': 1.9,\n  'NV': .5,\n  'NH': 3.7,\n  'NJ': 9.1,\n  'NM': .2,\n  'NY': 8.7,\n  'NC': 8.5,\n  'ND': 2.3,\n  'OH': 5.8,\n  'OK': 6.05,\n  'OR': 4.7,\n  'PA': 4.01,\n  'RI': 8.4,\n  'SC': 7.1,\n  'SD': .9,\n  'TN': 3.333333,\n  'TX': 8.1,\n  'UT': 2.8,\n  'VT': 2.6,\n  'VA': 8.2,\n  'WA': 9.2,\n  'WV': 7.9,\n  'WY': 0\n};\nvar _c;\n$RefreshReg$(_c, \"WhiteHatStats\");","map":{"version":3,"names":["React","useEffect","useRef","useMemo","useSVGCanvas","d3","jsxDEV","_jsxDEV","WhiteHatStats","props","_s","d3Container","svg","height","width","tTip","margin","top","right","bottom","left","data","states","plotData","map","state","male_count","count","xScale","scaleBand","domain","d","name","range","padding","yScale","scaleLinear","max","female_count","nice","stack","keys","stackedData","console","log","selectAll","remove","maleBars","enter","append","attr","bandwidth","on","e","string","ToolTip","moveTTipEvent","html","hideTTip","femaleBars","call","axisBottom","style","axisLeft","labelSize","text","y","yAxis","drawStateLegend","bounds","node","getBBox","x","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","drawingDifficulty","$RefreshReg$"],"sources":["D:/Hossein/2024/Spring/CS529/HW01/CS529_HW01/src/WhiteHatStats.js"],"sourcesContent":["import React, {useEffect, useRef,useMemo} from 'react';\r\nimport useSVGCanvas from './useSVGCanvas.js';\r\nimport * as d3 from 'd3';\r\n\r\n\r\n//change the code below to modify the bottom plot view\r\nexport default function WhiteHatStats(props){\r\n    const d3Container = useRef(null);\r\n    const [svg, height, width, tTip] = useSVGCanvas(d3Container);\r\n\r\n    const margin = { top: 60, right: 30, bottom: 60, left: 60 };\r\n\r\n    useEffect(()=>{\r\n        if (!svg || !props.data) return;\r\n\r\n        const data = props.data.states;\r\n\r\n        // Prepare data in suitable format for stacking\r\n        const plotData = data.map(state => {\r\n            return {\r\n                'name': state.state,\r\n                'male_count': state.male_count,\r\n                'female_count': state.count - state.male_count // Assuming count is total\r\n            };\r\n        });\r\n\r\n        // Define scales\r\n        const xScale = d3.scaleBand()\r\n            .domain(plotData.map(d => d.name))\r\n            .range([margin.left, width - margin.right])\r\n            .padding(0.1);\r\n\r\n        const yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(plotData, d => d.male_count + d.female_count)])\r\n            .nice()\r\n            .range([height - margin.bottom, margin.top]);\r\n        ////\r\n        \r\n        ////\r\n\r\n        \r\n        //  create stack bar base on two keys male and female Stack generator\r\n        const stack = d3.stack().keys(['male_count', 'female_count'])\r\n\r\n\r\n        const stackedData = stack(plotData);\r\nconsole.log(plotData)\r\n        // Draw male from plotdata it is first key in console.log\r\n        svg.selectAll('.male-bars').remove();\r\n        const maleBars = svg.selectAll('.male-bars')\r\n            .data(stackedData[0])\r\n            .enter().append('rect')\r\n            .attr('class', 'male-bars')\r\n            .attr('x', d => xScale(d.data.name))\r\n            .attr('y', d => yScale(d[1]))\r\n            .attr('height', d => yScale(d[0]) - yScale(d[1]))\r\n            .attr('width', xScale.bandwidth())\r\n            .attr('fill', 'steelblue')\r\n            .on('mouseover', (e, d) => {\r\n                const string = `${d.data.name}</br>Male Deaths: ${d.data.male_count}`\r\n               \r\n                props.ToolTip.moveTTipEvent(tTip, e);\r\n                tTip.html(string);\r\n            })\r\n            .on('mousemove', (e) => {\r\n                props.ToolTip.moveTTipEvent(tTip, e);\r\n            })\r\n            .on('mouseout', () => {\r\n                props.ToolTip.hideTTip(tTip);\r\n            });\r\n\r\n        // Draw female deaths bars on top of male deaths bars\r\n        svg.selectAll('.female-bars').remove();\r\n        const femaleBars = svg.selectAll('.female-bars')\r\n            .data(stackedData[1])\r\n            .enter().append('rect')\r\n            .attr('class', 'female-bars')\r\n            .attr('x', d => xScale(d.data.name))\r\n            .attr('y', d => yScale(d[1]))\r\n            .attr('height', d => yScale(d[0]) - yScale(d[1]))\r\n            .attr('width', xScale.bandwidth())\r\n            .attr('fill', 'pink')\r\n            .on('mouseover', (e, d) => {\r\n                const string = `${d.data.name}</br>Female Deaths: ${d.data.female_count}`;\r\n                \r\n                props.ToolTip.moveTTipEvent(tTip, e);\r\n                \r\n                tTip.html(string);\r\n            })\r\n            .on('mousemove', (e) => {\r\n                props.ToolTip.moveTTipEvent(tTip, e);\r\n            })\r\n            .on('mouseout', () => {\r\n                props.ToolTip.hideTTip(tTip);\r\n            });\r\n\r\n        // Draw x-axis\r\n        svg.selectAll('.x-axis').remove();\r\n        svg.append('g')\r\n            .attr('class', 'x-axis')\r\n            .attr('transform', `translate(0,${height - margin.bottom})`)\r\n            .call(d3.axisBottom(xScale))\r\n            .selectAll('text')\r\n            .attr('dy', '1em')\r\n            .style('text-anchor', 'middle');\r\n\r\n        // Draw y-axis\r\n        svg.selectAll('.y-axis').remove();\r\n        svg.append('g')\r\n            .attr('class', 'y-axis')\r\n            .attr('transform', `translate(${margin.left},0)`)\r\n            .call(d3.axisLeft(yScale));\r\n\r\n        // Change the title\r\n        const labelSize = margin.top / 2;\r\n        svg.selectAll('text').remove();\r\n        svg.append('text')\r\n            .attr('x', width / 2)\r\n            .attr('y', labelSize)\r\n            .attr('text-anchor', 'middle')\r\n            .attr('font-size', labelSize)\r\n            .attr('font-weight', 'bold')\r\n            .text('Gun Deaths by State');\r\n                y=1000;\r\n            var yAxis = d3.axisLeft(y)\r\n\r\n            svg.append('g')\r\n            .call(yAxis);\r\n            // add x-bar and y bar chart information\r\n         \r\n\r\n\r\n\r\n            // creat a box color for barchart to show information female and male      //\r\n            function drawStateLegend(){\r\n\r\n                let bounds = svg.node().getBBox();\r\n    \r\n                svg.append(\"rect\").attr('class','barChartLegendRect').attr(\"x\", bounds.x + bounds.width - 200).attr(\"y\",bounds.y).attr(\"width\", 20).attr(\"height\", 20).style(\"fill\", \"steelblue\")\r\n                svg.append(\"rect\").attr('class','barChartLegendRect').attr(\"x\", bounds.x + bounds.width - 200).attr(\"y\",bounds.y + 50).attr(\"width\", 20).attr(\"height\", 20).style(\"fill\", \"pink\")\r\n                svg.append(\"text\").attr('class','barChartLegendRectText').attr(\"x\", bounds.x + bounds.width - 160).attr(\"y\",bounds.y + 10).text(\"Male victims\").attr(\"alignment-baseline\",\"middle\")\r\n                svg.append(\"text\").attr('class','barChartLegendRectText').attr(\"x\", bounds.x + bounds.width - 160).attr(\"y\",bounds.y + 60).text(\"Female victims\").attr(\"alignment-baseline\",\"middle\")\r\n            }\r\n    \r\n            drawStateLegend()\r\n\r\n\r\n    }, [props.data, svg]);\r\n\r\n    \r\n    return (\r\n        <div\r\n            className={\"d3-component\"}\r\n            style={{ 'height': '99%', 'width': '99%' }}\r\n            ref={d3Container}\r\n        ></div>\r\n    );\r\n}\r\n//END of TODO #1.\r\n/////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n//////////////////////\r\n \r\nconst drawingDifficulty = {\r\n    'IL': 9,\r\n    'AL': 2,\r\n    'AK': 1,\r\n    'AR': 3,\r\n    'CA': 9.51,\r\n    'CO': 0,\r\n    'DE': 3.1,\r\n    'DC': 1.3,\r\n    'FL': 8.9,\r\n    'GA': 3.9,\r\n    'HI': 4.5,\r\n    'ID': 4,\r\n    'IN': 4.3,\r\n    'IA': 4.1,\r\n    'KS': 1.6,\r\n    'KY': 7,\r\n    'LA': 6.5,\r\n    'MN': 2.1,\r\n    'MO': 5.5,\r\n    'ME': 7.44,\r\n    'MD': 10,\r\n    'MA': 6.8,\r\n    'MI': 9.7,\r\n    'MN': 5.1,\r\n    'MS': 3.8,\r\n    'MT': 1.4,\r\n    'NE': 1.9,\r\n    'NV': .5,\r\n    'NH': 3.7,\r\n    'NJ': 9.1,\r\n    'NM': .2,\r\n    'NY': 8.7,\r\n    'NC': 8.5,\r\n    'ND': 2.3,\r\n    'OH': 5.8,\r\n    'OK': 6.05,\r\n    'OR': 4.7,\r\n    'PA': 4.01,\r\n    'RI': 8.4,\r\n    'SC': 7.1,\r\n    'SD': .9,\r\n    'TN': 3.333333,\r\n    'TX': 8.1,\r\n    'UT': 2.8,\r\n    'VT': 2.6,\r\n    'VA': 8.2,\r\n    'WA': 9.2,\r\n    'WV': 7.9,\r\n    'WY': 0,\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}